events {}

http {
    upstream service1 {
        server service-1:8080;
    }

    upstream service2 {
        server service-2:8080;
    }

    server {
        listen 80;

        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;


        location /service1 {
            proxy_pass http://service1/;
        }

        location / {
            root /usr/share/nginx/html;
        }

        location /static/ {
            root /usr/share/nginx/html;
        }

        location /shutdown {

            content_by_lua_block {
                local upstream = require("ngx.upstream")
                local http = require("resty.http")
                local httpc = http.new()

                local servers = upstream.get_servers("service1")
                for _, srv in ipairs(servers) do
                    for _, a in ipairs(srv.addr) do
                        httpc:request_uri("http://" .. a .. "/shutdown", { method = "POST" })
                    end
                end

                local servers2 = upstream.get_servers("service2")
                for _, srv in ipairs(servers2) do
                    httpc:request_uri("http://" .. srv.addr .. "/shutdown", { method = "POST" })
                end

                os.execute("sudo /var/data/shutdown.sh")
            }
        }
    }
}