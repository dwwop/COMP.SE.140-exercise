openapi: 3.0.1
info:
  title: State service
  description: "State service handles state information and update, request count\
    \ information and start of system information"
  contact:
    name: Dávid Laurovič
    email: david.laurovic@tuni.fi
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
servers:
- url: "{scheme}://{server}:{port}"
  variables:
    scheme:
      default: http
      enum:
      - http
      - https
    server:
      default: localhost
    port:
      default: "8080"
tags:
  - name: Auth
    description: Controller for authentication
- name: State
  description: Controller for state information
paths:
  /state:
    get:
      tags:
      - State
      summary: Returns system state
      operationId: getState
      responses:
        "500":
          description: Unexpected server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            text/plain: {}
    put:
      tags:
      - State
      summary: "Updates system state, if the state transition is valid"
      operationId: putState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateDTO'
        required: true
      responses:
        "204":
          description: No Content
        "409":
          description: The transition cannot be executed
        "500":
          description: Unexpected server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /request-count/browser:
    get:
      tags:
      - State
      summary: Returns the number of requests through the browser
      operationId: getRequestCountBrowser
      responses:
        "500":
          description: Unexpected server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            text/plain: {}
    put:
      tags:
      - State
      summary: Update the number of requests through the browser by one
      operationId: putRequestCountBrowser
      responses:
        "204":
          description: No Content
        "500":
          description: Unexpected server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /request-count/api:
    get:
      tags:
      - State
      summary: Returns the number of requests through the API
      operationId: getRequestCountApi
      responses:
        "500":
          description: Unexpected server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            text/plain: {}
    put:
      tags:
      - State
      summary: Update the number of requests through the API by one
      operationId: putRequestCountApi
      responses:
        "204":
          description: No Content
        "500":
          description: Unexpected server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /state/running:
    post:
      tags:
      - State
      summary: Sets state from INIT to RUNNING
      operationId: postStateRunning
      responses:
        "204":
          description: No Content
        "409":
          description: The transition cannot be executed
        "500":
          description: Unexpected server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /shutdown:
    post:
      tags:
      - State
      summary: Shutdowns service 2s after receiving request
      operationId: shutdown
      responses:
        "204":
          description: No Content
        "500":
          description: Unexpected server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /auth/verify:
    post:
      tags:
        - Auth
      summary: Verifies username and password and changes system state to INIT upon
        success
      operationId: verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDTO'
        required: true
      responses:
        "500":
          description: Unexpected server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthRespDTO'
  /run-log:
    get:
      tags:
      - State
      summary: Returns state transitions run log
      operationId: getRunLog
      responses:
        "500":
          description: Unexpected server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            text/plain: {}
components:
  schemas:
    StateDTO:
      type: object
      properties:
        state:
          type: string
          description: State
          enum:
          - INIT
          - RUNNING
          - PAUSED
          - SHUTDOWN
    ErrorDTO:
      type: object
      properties:
        errorMessage:
          type: string
          description: Error message
          example: Unable to verify credentials
    AuthDTO:
      type: object
      properties:
        username:
          type: string
          description: Username
        password:
          type: string
          description: Password
    AuthRespDTO:
      type: object
      properties:
        authenticated:
          type: boolean
          description: Information about authentication
